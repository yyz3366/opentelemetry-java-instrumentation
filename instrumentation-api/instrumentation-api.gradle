plugins {
  id 'org.xbib.gradle.plugin.jflex' version '1.5.0'
  id("otel.java-conventions")
  id("otel.jacoco-conventions")
  id("otel.publish-conventions")
}

group = 'io.opentelemetry.instrumentation'

def jflexTargetDir = file"${project.buildDir}/generated/jflex/sql"

def sqlSanitizerJflex = tasks.register("sqlSanitizerJflex", org.xbib.gradle.plugin.JFlexTask) {
  group = 'jflex'
  description = 'Generate SqlSanitizer'
  source = [file("${project.projectDir}/src/main/jflex/SqlSanitizer.flex")]
  target = jflexTargetDir
}

tasks.named("compileJava").configure {
  dependsOn(sqlSanitizerJflex)
}

tasks.named("javadoc").configure {
  dependsOn(sqlSanitizerJflex)
}

tasks.named("sourcesJar").configure {
  dependsOn(sqlSanitizerJflex)
}

sourceSets.main.java.srcDir(jflexTargetDir)

dependencies {
  api project(":instrumentation-api-caching")

  api "io.opentelemetry:opentelemetry-api"
  api "io.opentelemetry:opentelemetry-semconv"

  implementation "io.opentelemetry:opentelemetry-api-metrics"
  implementation "org.slf4j:slf4j-api"

  compileOnly "com.google.auto.value:auto-value-annotations"
  annotationProcessor "com.google.auto.value:auto-value"

  testImplementation project(':testing-common')
  testImplementation "org.mockito:mockito-core"
  testImplementation "org.mockito:mockito-junit-jupiter"
  testImplementation "org.assertj:assertj-core"
  testImplementation "org.awaitility:awaitility"
  testImplementation "io.opentelemetry:opentelemetry-sdk-metrics"
  testImplementation "io.opentelemetry:opentelemetry-sdk-testing"
}
