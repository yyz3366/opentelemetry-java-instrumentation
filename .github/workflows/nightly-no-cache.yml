name: Nightly build without cache

on:
  schedule:
    # strange schedule to reduce the risk of DDOS GitHub infra
    - cron: "48 4 * * *"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0

      - name: Set up JDK 11 for running checks
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 11

      - name: Cache Gradle Wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-cache-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: Build
        run: ./gradlew build --stacktrace -x :smoke-tests:test --no-build-cache

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ 8, 15 ]
      fail-fast: false
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0

      - id: setup-test-java
        name: Set up JDK ${{ matrix.java }} for running tests
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: ${{ matrix.java }}

      - name: Set up JDK 11 for running Gradle
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 11

      - name: Cache Gradle Wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-cache-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: Test
        run: ./gradlew test -PtestJavaVersion=${{ matrix.java }} --stacktrace -x :smoke-tests:test -Porg.gradle.java.installations.paths=${{ steps.setup-test-java.outputs.path }} -Porg.gradle.java.installations.auto-download=false --no-build-cache

  testLatestDeps:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 11

      - name: Cache Gradle Wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-cache-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: Test
        run: ./gradlew test -x :smoke-tests:test -PtestLatestDeps=true --stacktrace --no-build-cache

  smoke-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest ]
        suite: [ "glassfish", "jetty", "liberty", "tomcat", "tomee", "wildfly", "other" ]
      fail-fast: false
    steps:
      - name: Support longpaths
        run: git config --system core.longpaths true
        if: matrix.os == 'windows-latest'

      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0

      - name: Set up JDK 11 for running Gradle
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 11

      - name: Cache Gradle Wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-cache-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: Test
        run: ./gradlew :smoke-tests:test -PsmokeTestSuite=${{ matrix.suite }} --no-build-cache

  example-distro:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0

      - name: Set up JDK 11 for running checks
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 11

      - name: Cache Gradle Wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-cache-${{ hashFiles('examples/distro/gradle/wrapper/gradle-wrapper.properties') }}

      - name: Build
        run: ./gradlew build --stacktrace --no-build-cache
        working-directory: examples/distro

  issue:
    name: Open issue on failure
    needs: [ build, test, testLatestDeps, smoke-test, example-distro ]
    runs-on: ubuntu-latest
    if: always()
    steps:
      # run this action to get workflow conclusion
      # You can get conclusion by env (env.WORKFLOW_CONCLUSION)
      - uses: technote-space/workflow-conclusion-action@v2.1.7

      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0

      - uses: JasonEtco/create-an-issue@v2.5.0
        if: env.WORKFLOW_CONCLUSION == 'failure' # notify only if failure
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          filename: .github/workflows/nightly-failed.md
